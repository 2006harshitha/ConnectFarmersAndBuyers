const express = require("express");
const multer = require("multer");
const path = require("path");
const Product = require("../models/Product");

const router = express.Router();

// Multer storage setup
const storage = multer.diskStorage({
  destination: (req, file, cb) => cb(null, "uploads/"),
  filename: (req, file, cb) =>
    cb(null, Date.now() + path.extname(file.originalname)),
});

const upload = multer({ storage });

// Add a new product
router.post("/products", upload.single("image"), async (req, res) => {
  try {
    console.log("Incoming request to add product");
    console.log("Request body:", req.body);
    console.log("Uploaded file:", req.file);

    const { farmerUsername, category, name, quantity, pricePerKg, expiryDate } =
      req.body;

    // Validation
    if (
      !farmerUsername ||
      !category ||
      !name ||
      !quantity ||
      !pricePerKg ||
      !expiryDate ||
      !req.file
    ) {
      console.log("Validation failed");
      return res.status(400).json({ error: "All fields are required" });
    }

    // Create and save product (productId auto-generated by schema)
    const newProduct = new Product({
      farmerUsername,
      category,
      name,
      quantity,
      pricePerKg,
      image: req.file.filename,
      expiryDate,
    });

    await newProduct.save();

    console.log("Product saved successfully:", newProduct);

    res.status(201).json({
      success: true,
      message: "Product added successfully",
      product: newProduct, // includes productId automatically
    });
  } catch (error) {
    console.error("Error adding product:", error);
    res.status(500).json({ error: "Server error while adding product" });
  }
});

/// Search products (MUST be placed before /:username route)
router.get("/products/search", async (req, res) => {
  console.log("Search query received:", req.query.query);
  try {
    const query = req.query.query;
    if (!query)
      return res.status(400).json({ message: "Search query is required" });

    const products = await Product.find({
      $or: [
        { name: { $regex: query, $options: "i" } },
        { category: { $regex: query, $options: "i" } },
      ],
    });

    console.log("Search results:", products);
    res.json(products);
  } catch (error) {
    console.error("Error searching products:", error);
    res.status(500).json({ message: "Server error while searching products" });
  }
});

// Get farmer products by username
router.get("/products/:username", async (req, res) => {
  try {
    const products = await Product.find({
      farmerUsername: req.params.username,
    });
    res.json(products);
  } catch (error) {
    console.error("Error fetching products:", error);
    res.status(500).json({ error: "Server error while fetching products" });
  }
});

module.exports = router;
